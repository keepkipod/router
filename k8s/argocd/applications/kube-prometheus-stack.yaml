apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 73.2.0
    helm:
      values: |
        defaultRules:
          create: true
          rules:
            alertmanager: false
            etcd: false
            kubeScheduler: false
        
        prometheus:
          prometheusSpec:
            retention: 24h
            resources:
              requests:
                cpu: 200m
                memory: 200Mi
            serviceMonitorSelectorNilUsesHelmValues: false
            serviceMonitorSelector: {}
            serviceMonitorNamespaceSelector: {}
        
        grafana:
          enabled: true
          adminPassword: admin
          service:
            type: NodePort
            nodePort: 30300
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          
          # Sidecar configuration
          sidecar:
            dashboards:
              enabled: true
              label: grafana_dashboard
              labelValue: "1"
              searchNamespace: ALL
              folderAnnotation: grafana_folder
              defaultFolderName: "General"
              provider:
                allowUiUpdates: true
                disableDelete: false
                foldersFromFilesStructure: false
          
          # Dashboard providers configuration
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
              - name: 'default'
                orgId: 1
                folder: 'Default'
                type: file
                disableDeletion: false
                updateIntervalSeconds: 10
                allowUiUpdates: true
                options:
                  path: /var/lib/grafana/dashboards/default
              # Add provider for sidecar dashboards
              - name: 'sidecar'
                orgId: 1
                folder: 'Custom Dashboards'
                type: file
                disableDeletion: false
                updateIntervalSeconds: 10
                allowUiUpdates: true
                options:
                  path: /tmp/dashboards
          
          # Community dashboards
          dashboards:
            default:
              nginx-exporter:
                gnetId: 12708
                revision: 1
                datasource: Prometheus
              kubernetes-cluster:
                gnetId: 7249
                revision: 1
                datasource: Prometheus
        
        kubeEtcd:
          enabled: false
        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
        
        alertmanager:
          alertmanagerSpec:
            resources:
              requests:
                cpu: 50m
                memory: 50Mi
  
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - SkipDryRunOnMissingResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: custom-dashboards
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  project: default
  source:
    repoURL: https://github.com/keepkipod/router.git
    targetRevision: HEAD
    path: k8s/monitoring
    directory:
      include: 'grafana-*.yaml'
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=false