name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 3.2.7)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: keepkipod/router
  HELM_CHART_PATH: k8s/router

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Verify tag exists
        run: |
          if ! git rev-parse "v${{ inputs.version }}" >/dev/null 2>&1; then
            echo "❌ Tag v${{ inputs.version }} does not exist!"
            echo "Please create the tag first with: git tag v${{ inputs.version }} && git push origin v${{ inputs.version }}"
            exit 1
          fi
          
      - name: Checkout tag
        run: git checkout "v${{ inputs.version }}"
        
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
          
      - name: Package Helm Chart
        run: |
          mkdir -p .deploy || true
          cd .deploy
          helm package ${{ env.HELM_CHART_PATH }} --version ${{ inputs.version }} --app-version ${{ inputs.version }}
          
      - name: Generate checksums
        run: |
          cd .deploy
          sha256sum *.tgz > checksums.txt
          
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd .deploy
          
          # Generate release notes
          RELEASE_NOTES=$(cat << EOF
          ## 🚀 Release ${{ inputs.version }}
          
          ### 🐳 Docker Image
          - Registry: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`
          - Tags: \`${{ inputs.version }}\`, \`latest\`
          
          ### ⚓ Helm Chart
          - Chart: \`router\`
          - Version: \`${{ inputs.version }}\`
          - App Version: \`${{ inputs.version }}\`
          
          ### 📦 Installation
          
          \`\`\`bash
          # Install directly from OCI registry
          helm install router \\
            oci://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \\
            --version ${{ inputs.version }}
          
          # Or pull first and inspect
          helm pull oci://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \\
            --version ${{ inputs.version }}
          \`\`\`
          
          ### 📋 Checksums
          \`\`\`
          $(cat checksums.txt)
          \`\`\`
          EOF
          )
          
          # Create release with correct tag
          gh release create \
            "v${{ inputs.version }}" \
            --repo "${{ github.repository }}" \
            --title "router ${{ inputs.version }}" \
            --notes "$RELEASE_NOTES" \
            --verify-tag \
            *.tgz checksums.txt
            
      - name: Push Helm Chart to OCI Registry
        run: |
          cd .deploy
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
          helm push router-${{ inputs.version }}.tgz oci://${{ env.REGISTRY }}/${{ github.repository_owner }}